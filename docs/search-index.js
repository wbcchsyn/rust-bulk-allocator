var searchIndex = JSON.parse('{\
"bulk_allocator":{"doc":"bulk-allocator is implementations for GlobalAlloc holding…","i":[[3,"BulkA","bulk_allocator","\'BulkA\' stands for \'Bulk Allocator\'. This implements…",null,null],[3,"UnBulkA","","\'UnBulkA\' stands for \'Unsafe Bulk Allocator\'. This…",null,null],[3,"LayoutBulkA","","\'LayoutBulkA\' stands for \'single-Layout-cache Bulk…",null,null],[3,"UnLayoutBulkA","","\'UnLayoutBulkA\' stands for \'Unsafe single-Layout-cache…",null,null],[18,"MAX_LAYOUT_SIZE","","The max size of the `Layout` that method `alloc` accepts.…",0,null],[18,"MAX_LAYOUT_ALIGN","","The max layout of the `Layout` that method `alloc`…",0,null],[11,"new","","Creates a new instance with empty cache.",0,[[]]],[11,"backend","","Provides a reference to the backend allocator.",0,[[]]],[18,"MAX_LAYOUT_SIZE","","The max size of the `Layout` that method `alloc` uses the…",1,null],[18,"MAX_LAYOUT_ALIGN","","The max layout of the `Layout` that method `alloc` uses…",1,null],[11,"new","","Creates a new instance with empty cache.",1,[[]]],[11,"backend","","Provides a reference to the backend allocator.",1,[[]]],[11,"new","","Creates a new instance with empty cache.",2,[[["layout",3]]]],[11,"layout","","Returns same `Layout` that is passed to the constructor.…",2,[[],["layout",3]]],[11,"backend","","Provides a reference to the backend allocator.",2,[[]]],[11,"new","","Creates a new instance with empty cache.",3,[[["layout",3]]]],[11,"layout","","Returns same `Layout` that is passed to the constructor.…",3,[[],["layout",3]]],[11,"backend","","Provides a reference to the backend allocator.",3,[[]]],[17,"MEMORY_CHUNK_SIZE","","The default byte count of bulk memory that this crate…",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",2,[[["layout",3]]]],[11,"from","","",3,[[["layout",3]]]],[11,"default","","",0,[[]]],[11,"alloc","","",0,[[["layout",3]]]],[11,"dealloc","","",0,[[["layout",3]]]],[11,"alloc","","",1,[[["layout",3]]]],[11,"dealloc","","",1,[[["layout",3]]]],[11,"alloc","","",2,[[["layout",3]]]],[11,"dealloc","","",2,[[["layout",3]]]],[11,"alloc","","",3,[[["layout",3]]]],[11,"dealloc","","",3,[[["layout",3]]]]],"p":[[3,"UnBulkA"],[3,"BulkA"],[3,"UnLayoutBulkA"],[3,"LayoutBulkA"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);